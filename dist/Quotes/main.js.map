{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/quote-details/quote-details.component.css","webpack:///./src/app/quote-details/quote-details.component.html","webpack:///./src/app/quote-details/quote-details.component.ts","webpack:///./src/app/quote-form/quote-form.component.css","webpack:///./src/app/quote-form/quote-form.component.html","webpack:///./src/app/quote-form/quote-form.component.ts","webpack:///./src/app/quote.ts","webpack:///./src/app/quote/quote.component.css","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-quote></app-quote>\"","import { Component } from '@angular/core';\nimport { Quote } from './quote';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Quotes\"\n  quotes = [\n    new Quote(1, 'The sun is a star.','A.B Clark',\"Z.G\"),\n  \n];\n  constructor(){\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteDetailsComponent } from './quote-details/quote-details.component';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteDetailsComponent,\n    QuoteFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".Upvote{\\n    text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVvdGUtZGV0YWlscy9xdW90ZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9xdW90ZS1kZXRhaWxzL3F1b3RlLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5VcHZvdGV7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufSJdfQ== */\"","module.exports = \"<p>\\n  {{quote.author}} \\n</p>\\n\\n    <div class=\\\"label\\\">\\n        Votes\\n    </div>\\n\\n      <div class=\\\"votes-value\\\">\\n          {{ votes }}\\n      </div> \\n\\n     <ul id=\\\"vote\\\">\\n        <li class=\\\"item\\\">\\n        <a href (click)=\\\"likeVote()\\\" class=\\\"upvote\\\">Upvote</a>\\n        </li>\\n        <br>\\n        <li class=\\\"item\\\">\\n          <a href (click)=\\\"dislikeVote()\\\" class=\\\"downvote\\\">Downvote</a>\\n        </li>\\n   \\n     </ul>\\n\\n\"","import { Component,HostBinding, OnInit, Input } from '@angular/core';\nimport { Quote } from '../quote'\n\n@Component({\n  selector: 'app-quote-details',\n  templateUrl: './quote-details.component.html',\n  styleUrls: ['./quote-details.component.css']\n})\nexport class QuoteDetailsComponent implements OnInit {\n  \n   votes: number;\n\n  @Input () quote:Quote;\n  vote = 0;\n\n  constructor() {\n    this.votes = 0;\n   }\n\n   likeVote(): boolean{\n     this.votes +=1;\n     return false;\n   }\n\n   dislikeVote(): boolean{\n    this.votes -=1;\n    return false;\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1b3RlLWZvcm0vcXVvdGUtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"form-container\\\">\\n  <div class=\\\"row\\\">\\n\\n      <form (ngSubmit)='submitQuote()' #goalForm='ngForm'>\\n          <div class=\\\"form-group\\\">\\n\\n            Display: {{newQuote.name  }} {{newQuote.author}}\\n            <br>\\n            <br>\\n              <label for=\\\"name\\\">Quote</label>\\n              <br>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"newQuote.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required>\\n              <br>\\n              \\n          \\n\\n          <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\">\\n              <p> Type a Quote </p>              \\n          </div>  \\n              \\n          </div>\\n          <div class=\\\"form-group\\\">\\n\\n              <label for=\\\"author\\\">Author</label>\\n              <br>\\n              <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"author\\\" [(ngModel)]=\\\"newQuote.author\\\" name=\\\"name\\\" required>\\n             <br>\\n\\n              <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\">\\n                  <p> Enter the name of the Author</p>              \\n              </div>  \\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n\\n              <label for=\\\"submitted\\\">Submitted by</label>\\n              <br>\\n              <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"submitted\\\" [(ngModel)]=\\\"newQuote.submitted\\\" name=\\\"name\\\" required>\\n             <br>\\n\\n              <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\">\\n                  <p> Enter the name of the Submitter.</p>              \\n              </div>  \\n              <br>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">Submit Quote!</button>\\n      </form>\\n\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Quote } from '../quote'\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n  newQuote=new Quote(0,\"\",\"\",\"\");\n  @Output() addQuote=new EventEmitter<Quote>();\n \n\n  submitQuote(){\n    this.addQuote.emit(this.newQuote);\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n// import { Component, OnInit, Output ,EventEmitter } from '@angular/core';\n// import { Quote } from '../quote';\n\n// @Component({\n//   selector: 'app-quote-form',\n//   templateUrl: './quote-form.component.html',\n//   styleUrls: ['./quote-form.component.css']\n// })\n// export class QuoteFormComponent implements OnInit {\n\n//   newQuote=new Quote ()\n\n//   @Output() addQuote =new EventEmitter<Quote>();\n//   constructor() { }\n\n//   ngOnInit() {\n//   }\n\n// }\n","export class Quote {\n    public showAuthor:boolean;\n    constructor(public id:number, public name:string,public author:string,public submitted:string){\n        this.showAuthor=false\n    }\n}","module.exports = \"h1{\\n    color: crimson;\\n    text-align: center;\\n}\\np{\\n    color: crimson;\\n}\\nh3{\\n    text-align: center;\\n    font-family: Georgia, 'Times New Roman', Times, serif;\\n    font-size: x-large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVvdGUvcXVvdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixxREFBcUQ7SUFDckQsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvcXVvdGUvcXVvdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxe1xuICAgIGNvbG9yOiBjcmltc29uO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbnB7XG4gICAgY29sb3I6IGNyaW1zb247XG59XG5cbmgze1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LWZhbWlseTogR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XG59Il19 */\"","module.exports = \"<h1>Quotes</h1>\\n<div class=\\\"container\\\">\\n<h3>{{date | date:'shortDate'}}</h3>\\n<h3>{{date | date:'shortTime'}}</h3>\\n<h3>{{5.678 | number:'3.1-2'}}</h3>\\n\\n     <div class=\\\"quote\\\">\\n        <app-quote-form (addQuote)=\\\"addNewQuote($event)\\\"></app-quote-form>\\n    </div>\\n\\n<div class=\\\"Author\\\" *ngFor=\\\"let quote of quotes;let i = 'index'\\\">\\n        <ul>\\n                <li >{{quote.name}}</li> \\n                <button (click)='toogleDetails(i)'>Show Author</button>\\n\\n                <app-quote-details *ngIf=\\\"quote.showAuthor\\\" [quote]='quote'></app-quote-details>    \\n        </ul>\\n</div>\\n</div>\\n\\n\\n\\n\\n\\n        \\n\\n    \\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n \n  quotes = [\n    new Quote(1, 'Success is not final, failure is not fatal: it is the courage to continue that counts.','Winston Churchill',\"-\"),\n    new Quote(2,'Our greatest glory is not in never falling, but in rising every time we fall.','Confucius','-'),\n    new Quote(3,'All our dreams can come true, if we have the courage to pursue them.','Walt Disney','-'),\n    new Quote(4,'Everything you’ve ever wanted is on the other side of fear.','George Addair','-'),\n];\n\naddNewQuote(quote){\n  let quoteLength = this.quotes.length;\n  quote.id=quoteLength+1;\n  this.quotes.unshift(quote)\n\n}\n\ntoogleDetails(index){\n  this.quotes[index].showAuthor = !this.quotes[index].showAuthor;\n}\npublic date = new Date ();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}